/*
 * Copyright (c) 2022 Broadcom.
 * The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Broadcom, Inc. - initial API and implementation
 */

lexer grammar DaCoLexer;

channels{COMMENTS}
import TechnicalLexer;

GET: G E T;
ENTITY: E N T I T Y;
DESCRIPTION: D E S C R I P T I O N;
OWNER: O W N E R;
DESIGNER: D E S I G N E R;
ANALIST: A N A L I S T;
OWN: O W N;
AVG: A V G;
ANA: A N A;
DOM: D O M;
USER: U S E R;
NEXT: N E X T;
ITEM: I T E M;
ANY: A N Y;
SEQ: S E Q;
GRS: G R S;
TASK: T A S K;
ODETTE: O D E T T E;
JOB: J O B;
NETWORK: N E T W O R K;
ROW: R O W;
ON: O N;
TO: T O;
TABLE: T A B L E;
FILE: F I L E;
INTO: I N T O;
VOLSER: V O L S E R;
STRING: S T R I N G;
D_B: D MINUSCHAR B;
D_C: D MINUSCHAR C;
ALL: A L L;
IN: I N;
OF: O F;
ADDRESS: A D D R E S S;
DATE: D A T E;
DAY: D A Y;
DAY_OF_WEEK: D A Y MINUSCHAR O F MINUSCHAR W E E K;
DEBUG_CONTENTS: D E B U G MINUSCHAR C O N T E N T S;
DEBUG_ITEM: D E B U G MINUSCHAR I T E M;
DEBUG_LINE: D E B U G MINUSCHAR L I N E;
DEBUG_NAME: D E B U G MINUSCHAR N A M E;
DEBUG_SUB_1 : D E B U G MINUSCHAR S U B MINUSCHAR '1';
DEBUG_SUB_2 : D E B U G MINUSCHAR S U B MINUSCHAR '2';
DEBUG_SUB_3 : D E B U G MINUSCHAR S U B MINUSCHAR '3';
JNIENVPTR: J N I E N V P T R;
LENGTH: L E N G T H;
LINAGE_COUNTER: L I N A G E MINUSCHAR C O U N T E R;
LINE_COUNTER: L I N E MINUSCHAR C O U N T E R;
PAGE_COUNTER: P A G E MINUSCHAR C O U N T E R;
RETURN_CODE: R E T U R N MINUSCHAR C O D E;
SHIFT_IN : S H I F T MINUSCHAR I N;
SHIFT_OUT : S H I F T MINUSCHAR O U T;
SORT_CONTROL : S O R T MINUSCHAR C O N T R O L;
SORT_CORE_SIZE : S O R T MINUSCHAR C O R E MINUSCHAR S I Z E;
SORT_FILE_SIZE : S O R T MINUSCHAR F I L E MINUSCHAR S I Z E;
SORT_MESSAGE : S O R T MINUSCHAR M E S S A G E;
SORT_MODE_SIZE : S O R T MINUSCHAR M O D E MINUSCHAR S I Z E;
SORT_RETURN : S O R T MINUSCHAR R E T U R N;
TALLY: T A L L Y;
TIME: T I M E;
WHEN_COMPILED : W H E N MINUSCHAR C O M P I L E D;
FUNCTION : F U N C T I O N;
INTEGER: I N T E G E R;
RANDOM: R A N D O M;
SUM: S U M;
HIGH_VALUE : H I G H MINUSCHAR V A L U E;
HIGH_VALUES : H I G H MINUSCHAR V A L U E S;
LOW_VALUE: L O W MINUSCHAR V A L U E;
LOW_VALUES : L O W MINUSCHAR V A L U E S;
NULL: N U L L;
NULLS: N U L L S;
QUOTE : Q U O T E;
QUOTES : Q U O T E S;
SPACE : S P A C E;
SPACES : S P A C E S;
ZERO: Z E R O;
ZEROES : Z E R O E S;
ZEROS : Z E R O S;
TRUE: T R U E;
FALSE: F A L S E;

CR : C R;
DB: D B;

mode PICTURECLAUSE;
FINALCHARSTRING: CHARSTRING+ ->popMode;
CHARSTRING: PICTURECHARSGROUP1+ PICTURECHARSGROUP2? LParIntegralRPar? '.'? (PICTURECHARSGROUP1|PICTURECHARSGROUP2)
			PICTURECHARSGROUP1+ PICTURECHARSGROUP2? LParIntegralRPar?|
			PICTURECHARSGROUP1* '.' PICTUREPeriodAcceptables+ LParIntegralRPar?|
			PICTURECHARSGROUP1* PICTURECHARSGROUP2? PICTURECHARSGROUP1+ LParIntegralRPar? '.'? (PICTURECHARSGROUP1|PICTURECHARSGROUP2)|
			PICTURECHARSGROUP1* PICTURECHARSGROUP2? PICTURECHARSGROUP1+ LParIntegralRPar?|
			PICTURECHARSGROUP2 PICTURECHARSGROUP1* LParIntegralRPar? '.'? (PICTURECHARSGROUP1|PICTURECHARSGROUP2)|
			PICTURECHARSGROUP2 PICTURECHARSGROUP1* LParIntegralRPar?
;

PICTURECHARSGROUP1: PICTURECharAcceptedMultipleTime+;
PICTURECHARSGROUP2: PICTURECharAcceptedOneTime+;
WS2 : [ \t\f]+ -> channel(HIDDEN);
LParIntegralRPar: LPARENCHAR INTEGERLITERAL RPARENCHAR;
fragment PICTUREPeriodAcceptables: ('0'|'9'|B|Z|CR|DB|ASTERISKCHAR|COMMACHAR|MINUSCHAR|PLUSCHAR|SLASHCHAR);
fragment PICTURECharAcceptedMultipleTime: (A|G|N|P|X|DOLLARCHAR|PICTUREPeriodAcceptables);
fragment PICTURECharAcceptedOneTime: (V|E|S|CR|DB);
